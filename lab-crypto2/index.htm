<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta http-equiv="content-type" content="text/html;
      charset=windows-1252">
    <title>CSCI 493-81 Cybersecurity Lab - February 26, 2025</title>
  </head>
  <body>
    <h2>Cybersecurity Lab - February 26, 2025<br>
    </h2>
    <hr> <b>Crypto attacks (dictionary attacks, space-time tradeoffs)</b>
    In this experiment, we will study how to use dictionary to
    accelerate cracking an encrypted file. Then we will discuss the
    tradeoff between time and space. <br>
    <br>
    <h3>Brute force attack</h3>
    <cite> In cryptography, a <b>brute force attack</b> or <b>exhaustive












        key search</b> is a strategy that can in theory be used against
      any encrypted data by an attacker who is unable to take advantage
      of any weakness in an encryption system that would otherwise make
      his task easier. It involves systematically checking all possible
      keys until the correct key is found. In the worst case, this would
      involve traversing the entire search space.
      <p align="right">--Wikipedia</p>
    </cite> Obviously, brute force attack is extremely inefficient.
    Since people often pick some meaningful words or phrases as their
    password or secret key. Attackers can utilize this knowledge. By
    searching a space that consist of only the meaningful words and
    phrases, the attack may get faster.
    <h3>Dictionary attack</h3>
    Let us begin with an example.<br>
    First, I encrypted a zip file as shown in Figure 1. <br>
    <img src="img/encrypted_zip.png"><br>
    <h5> Figure 1. Encrypted Zip File.</h5>
    Then, I'll use a tool named "Advanced Archive Password Recovery" to
    crack the password. <br>
    <img src="img/archpr.png"><br>
    <h5> Figure 2. Advanced Archive Password Recovery.</h5>
    You can specify the character sets and the max. and min. length of
    the password. <br>
    Select brute-force in the "type of attack" list. and open the
    encrypted zip file, it will start to work. After a while, a window
    pops up to inform you the attack is done. If it successfully get the
    password in the space (length of password, character sets, etc.) it
    will show you the password; otherwise, it will report the fail.
    (that means you should enlarge the space) <br>
    <img src="img/brute-force.png"><br>
    <h5> Figure 3. Brute-force Attack.</h5>
    Similarly, you can perform a dictionary attack. The result shown in
    Figure 4. <br>
    <img src="img/dictionary.png"><br>
    <h5> Figure 4. Dictionary Attack.</h5>
    Compare the results, you may get the idea. Now it's your turn, pick
    a weapon, create your own encrypted data, and crack it with
    different attacks. <br>
    <h3>Rainbow Table</h3>
    <cite> A rainbow table is a lookup table offering a time-memory
      tradeoff used in recovering the plaintext password from a password
      hash generated by a hash function, often a cryptographic hash
      function. A common application is to make attacks against hashed
      passwords feasible. A salt is often employed with hashed passwords
      to make this attack more difficult, often infeasible.
      <p align="right">--Wikipedia</p>
    </cite> Figure 5 shows a tool that can use rainbow table to crack
    hashes. <br>
    <img src="img/rainbowcrack.png"><br>
    <h5> Figure 5. Rainbow Crack.</h5>
    This powerful tool's many features include:
    <ul>
      <li>Computation on multi-core processor support</li>
      <li>Computation on GPU (via NVIDIA CUDA and AMD Radeon technology)
        support</li>
      <li>Computation on multi-GPU (via NVIDIA CUDA and AMD Radeon
        technology) support</li>
      <li>...<br>
      </li>
    </ul>
    There are also Linux versions. Please see the <a
      href="http://project-rainbowcrack.com">homepage</a> for more
    information.<br>
    <br>
    Also, the tool named ophcrack can support rainbow crack. You can
    find several rainbow tables for crack Windows passwords&nbsp; <a
      href="http://ophcrack.sourceforge.net/tables.php">here</a>. Since
    the size of these tables is too big, I cannot put them in this
    package. You may have to download them yourself.
    <hr>
    <h3>References</h3>
    <ul>
      <li><a href="http://en.wikipedia.org/wiki/Dictionary_attack">Dictionary












          Attack (Wikipedia)</a></li>
      <li><a href="http://www.pinkas.net/PAPERS/pwdweb.pdf">Securing
          Passwords Against Dictionary Attacks</a></li>
      <li><a moz-do-not-send="true"
          href="https://github.com/openwall/john">John The Ripper</a><br>
      </li>
      <li><a
href="http://www.codinghorror.com/blog/2007/09/rainbow-hash-cracking.html">Rainbow












          Hash Cracking</a></li>
      <li><a href="http://project-rainbowcrack.com/">Project Rainbow
          Crack</a></li>
      <li><a moz-do-not-send="true"
          href="https://www.kali.org/tools/rainbowcrack/">Kali
          Rainbowcrack</a><br>
      </li>
      <li><a href="http://kestas.kuliukas.com/RainbowTables/">How
          Rainbow Tables work</a></li>
      <li><a href="http://hashcat.net/oclhashcat-plus/">Hashcat</a></li>
      <li><a href="https://www.cryptohaze.com/" moz-do-not-send="true">Cryptohaze</a><br>
      </li>
    </ul>
  </body>
</html>
